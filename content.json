{"meta":{"title":"six lei running","subtitle":"running","description":null,"author":"hzleiteng","url":"https://sunltyy.github.io","root":"/"},"pages":[{"title":"Page test","date":"2019-06-01T14:02:34.000Z","updated":"2019-06-01T14:02:34.947Z","comments":true,"path":"Page-test/index.html","permalink":"https://sunltyy.github.io/Page-test/index.html","excerpt":"","text":""},{"title":"about","date":"2019-06-07T09:03:51.000Z","updated":"2019-06-07T09:03:51.929Z","comments":true,"path":"about/index.html","permalink":"https://sunltyy.github.io/about/index.html","excerpt":"","text":""}],"posts":[{"title":"数据接口与算法","slug":"数据接口与算法","date":"2019-08-29T02:37:44.000Z","updated":"2019-08-29T02:38:22.346Z","comments":true,"path":"2019/08/29/数据接口与算法/","link":"","permalink":"https://sunltyy.github.io/2019/08/29/数据接口与算法/","excerpt":"","text":"","categories":[{"name":"算法","slug":"算法","permalink":"https://sunltyy.github.io/categories/算法/"}],"tags":[]},{"title":"hexo评论接入排坑","slug":"hexo评论接入排坑","date":"2019-06-10T14:30:30.000Z","updated":"2019-06-10T15:49:21.978Z","comments":true,"path":"2019/06/10/hexo评论接入排坑/","link":"","permalink":"https://sunltyy.github.io/2019/06/10/hexo评论接入排坑/","excerpt":"","text":"今晚下班，不用回家带娃娃，赶紧抽时间码下hexo的评论接入，话说期间遇到的坑也不少，典型的几个问题下边会重点提一下，话不多说，直接码。。 一、评论系统选型 多说——&gt;2017年已经关闭了服务 畅言——&gt;应该是响应国家言论自由的方针，需要备案，没错需要备案，你没看错 友言——&gt;无奈也已经关闭了 gitment–&gt; 是由基于github issues的系统评论，需要有github账号，考虑到看技术博客的同行，应该都有github吧. Hypercomments—-&gt;大体喵了几眼，看着比较麻烦，没有深入去了解 综上，我选择了gitment，对我来说已经足够可用了，点赞，评论都支持的。 二、gitment简介 基于github issues，实际上是为每一篇博客文章都关联一个issue，所有相关的评论都是对这个issue的评论。 每写好一篇博客文章，都需要进行初始化 需要有github账号，考虑到受众，其实还是可以接收的。 接入工作量小 界面清爽，不是华而不实的那种 三、接入流程1.创建repo用于存储评论 获取repo地址：git@github.com:xxx/xxx.git 2.授权 OAuth Application 注册成功后，你会得到 clientId、Client Secret接下来会使用到 3.配置MIHO相关gitment12345gitment: owner: Sunltyy #你的 GitHub ID repo: &apos;my-blog-comments&apos; #存储评论的 repo client_id: &apos;第2步获取到的clientId&apos; #client ID client_secret: &apos;第2步获取到的secret&apos; #client secret 4.发布1hexo g -d 5.登录初始化评论 需要登录你第一步创建的repo的owner用户,然后点击Initialize Comments即可 7.收工 遇到的坑点 gitment评论接入虽然不麻烦，但是还是遇到了不少坑点，几个比较影响效率的地方整理，发给后来人。 登录后Object ProgressEvent 登录后，跳出这个报错，实际上gitment的作者已经停掉了自己的服务器，可以找到gitemnt.ejs里的 123456找到 gitment.ejs里的这段引用。&lt;link rel=&quot;stylesheet&quot; href=&quot;//imsun.github.io/gitment/style/default.css&quot;&gt;&lt;script src=&quot;//imsun.github.io/gitment/dist/gitment.browser.js&quot;&gt;&lt;/script&gt;替换为：&lt;link rel=&quot;stylesheet&quot; href=&quot;https://jjeejj.github.io/css/gitment.css&quot;&gt;&lt;script src=&quot;https://jjeejj.github.io/js/gitment.js&quot;&gt;&lt;/script&gt; 亲测试可用，如果你想自己搭建，可以这里https://github.com/imsun/gitment/issues/170 初始化评论Invalid Errorgitment创建github issue的时候，标签长度不能大于50个字符。但查看browser.js，我们可以看到lable是如何取值的因此，我们需要初始化id，不能使用默认的当前页面的url， 修改gitment.ejs,添加id初始化为当前页的标题即可 12345678910111213141516&lt;link rel=&quot;stylesheet&quot; href=&quot;https://jjeejj.github.io/css/gitment.css&quot;&gt;&lt;script src=&quot;https://jjeejj.github.io/js/gitment.js&quot;&gt;&lt;/script&gt;&lt;div id=&quot;comments&quot;&gt; &lt;script&gt; var gitment = new Gitment(&#123; id :&apos;&lt;%=page.title%&gt;&apos;, owner: &apos;Sunltyy&apos;, repo: &apos;my-blog-comments&apos;, oauth: &#123; client_id: &apos;你申请的Id&apos;, client_secret: &apos;你申请的密钥&apos;, &#125;, &#125;) gitment.render(&apos;comments&apos;) &lt;/script&gt;&lt;/div&gt; 希望，这篇文章能帮助到你 【- -】","categories":[{"name":"hexo","slug":"hexo","permalink":"https://sunltyy.github.io/categories/hexo/"}],"tags":[]},{"title":"hexo博客框架建站","slug":"hexo接入评论排坑指南","date":"2019-06-09T06:42:54.000Z","updated":"2019-06-09T13:07:28.404Z","comments":true,"path":"2019/06/09/hexo接入评论排坑指南/","link":"","permalink":"https://sunltyy.github.io/2019/06/09/hexo接入评论排坑指南/","excerpt":"","text":"背景 刷朋友圈期间，偶然看到一位码农同行，在鼓捣hexo，自己心血来潮google了一把，这是个什么东东？后续一发不可收…..有兴趣的同学可移驾到hexo官网,如果你是个英语盲也没关系，送上hexo中文文档，官网上对hexo的介绍已经很详细了，我就不在过多描述。仅仅列出自己使用到的一些特性、极其功能。 hexo特性 博客框架、快速、简单 使用markdown编写博文 hexo根据markdown博文，几秒钟内可生成静态文件网站 丰富的主题，切换主题方便，目前我使用的是MIHO的主题 丰富的插件-》这个目前还用到 命令行简单、易用 我使用hexo搭建博客过程一、环境依赖 git -&gt;网上教程一大堆 node.js -&gt;网上教程也是烂大街了 hexo1npm install -g hexo-cli 二、建站流程，配合github1.本地初始化1hexo init [folder] 2.进入到初始化目录1cd [folder] 可以看到如下目录结构，理清目录作用，对后续使用hexo还是挺有帮助的 12345678.├── _config.yml---&gt;主要的配置文件，这里可以修改大部分的配置相关信息├── package.json---&gt;对于非前端开发来说，可以不必关心├── scaffolds-----&gt; 模版文件夹，新家blog文章时，以这里定义的模版填充├── source| ├── _drafts---&gt;草稿| └── _posts---&gt; 新建的文章的markdown源文件└── themes---&gt;主题 3.新建markdown文档1hexo new &quot;The common hello world&quot; 4.生成静态文件12hexo generate 或者简写为 hexo g 5.查看站点效果12hexo server或者简写为 hexo s 启动成功后，打开http://localhost:4000 即可预览生成的静态站点 6.部署到github 1.登录到github，新建repository,注意项目名称必须为:${github的用户名}.github.io2.修改_config.xml,修改以下git信息 1234deploy: type: git repo: git@github.com:XXX----》填写第一步repo的ssh地址 branch: master-----&gt;master分支 7.发布到github12hexo deploy或者简写为 hexo d 8.查看线上静态博客站点信息https://${你github的用户名}.github.io 更换主题1.如果你觉得hexo默认的主题不大喜欢，你可以来主题浏览你想用的主题，然后每个主题都会有自己的接入方式，按流程切换就好了。2.如果你是前端高手，那当我没说，你自己实现把，对于后端开发的我，专门用来写博客已经足够用了3.我本人选用的主题为MIHO,看着比较清爽，该有的功能都有 ps 遇到的坑点 1.hexo的配置方式默认使用yaml格式，key后的空格一定要有，而且要区分半角，刚开始的时候，修改_config.xml里的配置，每次hexo s命令都会报YAMLException: incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line at line 1, column 33:2.github 建repo的名称一定要是 ${你的github用户名}.github.io;;;不然hexo deploy后是没有效果的，你也不知道该在浏览器中输入什么地址来访问。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://sunltyy.github.io/categories/hexo/"}],"tags":[]},{"title":"写作总动员","slug":"写作总动员","date":"2019-06-08T12:43:15.000Z","updated":"2019-06-08T12:50:35.918Z","comments":true,"path":"2019/06/08/写作总动员/","link":"","permalink":"https://sunltyy.github.io/2019/06/08/写作总动员/","excerpt":"","text":"计划 今天弄好了个人博客 计划之后，每周都能在带娃之余抽一点时间，写作自己的博客 写作内容包含带娃心得、学习分享、技术问题分享 今日鸡汤只要生命还在，请你相信每天的太阳都是新的。你永远不知道明天会发生什么，如果在今天遇到了你爱的人，那么一定就要在今天告诉他：我爱你，我非常非常爱你。即使他无法拿相同的爱和你回应，至少在他知道自己被爱的那一刻是高兴而欢喜。","categories":[{"name":"关于我","slug":"关于我","permalink":"https://sunltyy.github.io/categories/关于我/"}],"tags":[]},{"title":"一起学习spring-boot","slug":"一起学习spring-boot","date":"2019-06-06T12:16:27.000Z","updated":"2019-06-06T12:16:27.741Z","comments":true,"path":"2019/06/06/一起学习spring-boot/","link":"","permalink":"https://sunltyy.github.io/2019/06/06/一起学习spring-boot/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"ES Learning","slug":"ES-Learning","date":"2019-06-06T12:15:48.000Z","updated":"2019-06-06T12:15:48.333Z","comments":true,"path":"2019/06/06/ES-Learning/","link":"","permalink":"https://sunltyy.github.io/2019/06/06/ES-Learning/","excerpt":"","text":"","categories":[],"tags":[]}]}